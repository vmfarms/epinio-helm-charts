{{- $releaseName := (.Release.Name) -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "epinio-truncate" .Values.epinio.appName }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "epinio-application.labels" . | nindent 4 }}
  annotations:
    {{- include "epinio-application.annotations" . | nindent 4 }}
spec:
  replicas: {{ .Values.epinio.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.epinio.appName | quote }}
  template:
    metadata:
      annotations:
        app.kubernetes.io/name: {{ .Values.epinio.appName | quote }}
        {{- include "epinio-application.annotations" . | nindent 8 }}
        {{- with .Values.epinio.start }}
        epinio.io/start: {{ . | quote }}
        {{- end }}
        {{- if and .Values.userConfig.apmAutoinstrument .Values.userConfig.apmAutoinstrumentEnabled }}
        instrumentation.opentelemetry.io/inject-{{ .Values.userConfig.apmAutoinstrument }}: "true"
        {{- end }}
      labels:
        {{- include "epinio-application.labels" . | nindent 8 }}
        epinio.io/stage-id: {{ .Values.epinio.stageID | quote }}
        epinio.io/app-container: {{ include "epinio-truncate" .Values.epinio.appName }}
    spec:
      serviceAccount: {{ .Release.Namespace }}
      serviceAccountName: {{ .Release.Namespace }}
      automountServiceAccountToken: true
      {{- with .Values.epinio.configurations }}
      volumes:
      {{- range . }}
      - name: {{ . }}
        secret:
          defaultMode: 420
          secretName: {{ . }}
      {{- end }}
      {{- end }}
      containers:
      - name: {{ include "epinio-truncate" .Values.epinio.appName }}
        ports:
        - containerPort: {{ include "epinio-app-listening-port" . }}
          protocol: TCP
        {{- with .Values.epinio.configpaths }}
        volumeMounts:
        {{- range . }}
        - mountPath: /configurations/{{ .path }}
          name: {{ .name }}
          readOnly: true
        {{- end }}
        {{- end }}
        env:
        - name: PORT
          value: {{ include "epinio-app-listening-port" . | quote }}
        {{- with .Values.epinio.configurations }}
        {{- range . }}
        {{- if (hasSuffix "-postgresql" .)  }}
        - name: PSQL_HOSTNAME
          value: "{{ . }}-hl"
        - name: PSQL_USERNAME
          value: postgres
        - name: "PSQL_PORT"
          value: "5432"
        - name: PSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ . | quote }}
              key: postgres-password
        - name: PSQL_DB_NAME
          value: {{ trimSuffix "-postgresql" . }}
        - name: DATABASE_URL
          value: postgresql://$(PSQL_USERNAME):$(PSQL_PASSWORD)@$(PSQL_HOSTNAME):$(PSQL_PORT)/$(PSQL_DB_NAME)
        {{- end }}
        {{- if (hasSuffix "-mongodb" .)  }}
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ . }}
              key: mongodb-passwords
        - name: MONGODB_URL
          value: "mongodb://admin:$(MONGODB_ROOT_PASSWORD)@{{ . }}:27017/default"
        {{- end }}
        {{- if (hasSuffix "-redis" .)  }}
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ . }}
              key: redis-password
        - name: REDIS_HOSTNAME
          value: "{{ . }}-headless"
        - name: REDIS_PORT
          value: "6379"
        {{- end }}
        {{- if (hasSuffix "-rabbitmq" .)  }}
        - name: RABBITMQ_USERNAME
          value: user
        - name: RABBITMQ_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ . }}
              key: rabbitmq-password
        - name: RABBITMQ_HOSTNAME
          value: "{{ . }}-headless"
        - name: RABBITMQ_PORT
          value: "5672"
        {{- end }}
        {{- if (hasSuffix "-mysql" .)  }}
        - name: MYSQL_USERNAME
          value: root
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ . }}
              key: mysql-root-password
        - name: MYSQL_HOSTNAME
          value: "{{ . }}-headless"
        - name: MYSQL_DB_NAME
          value: my_database
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_DATABASE_URL
          value: mysql://$(MYSQL_USERNAME):$(MYSQL_PASSWORD)@$(MYSQL_HOSTNAME):$(MYSQL_PORT)/$(MYSQL_DB_NAME)
        {{- end }}
        {{- if (hasSuffix "-minio" .)  }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: {{ . }}
              key: ACCESS_KEY
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: {{ . }}
              key: SECRET_KEY
        - name: AWS_REGION ## This is here just for AWS SDK
          value: us-east-1
        - name: AWS_ENDPOINT_URL_S3
          value: https://shared-clients-api.minio.beta.stack.io
        - name: S3_BUCKET_NAME
          value: "{{ $.Release.Namespace }}-{{ trimSuffix "-minio" . }}"
        {{- end }}
        {{- end }}
        {{- end }}
        {{- range .Values.epinio.env }}
        - name: {{ .name | quote }}
          value: {{ .value | quote }}
        {{- end }}
        envFrom:
        {{- with .Values.epinio.configpaths }}
        {{- range . }}
        {{- if (contains "vault" .name) }}
        - secretRef:
            name: {{ printf "%s-external-secret" .name | quote }}
            optional: true
        {{- end }}
        {{- end }}
        {{- end }}
        image: {{ .Values.epinio.imageURL }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        resources:
          limits:
            cpu: {{ default "100m" .Values.userConfig.cpu }}
            memory: {{ default "128Mi" .Values.userConfig.memory }}
          requests:
            cpu: {{ default "100m" .Values.userConfig.cpu }}
            memory: {{ default "128Mi" .Values.userConfig.memory }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
