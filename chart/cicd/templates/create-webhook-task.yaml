apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-webhook-{{ .Release.Name }}-cicd
  labels:
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }} 
    {{- end }}
    {{- include "cicd-bind.labels" . | nindent 4 }}
spec:
  volumes:
  - name: github-info
    secret:
      secretName: $(params.GitHubInfoSecretName)
  params:
  - name: ExternalDomain
    description: "The external domain for the EventListener e.g. `$(params.EventListenerName).<PROXYIP>.nip.io`"
  - name: GitHubInfoSecretName
    description: "The Secret with the GitHub Token"
  - name: GitHubRepo
    description: "The GitHub repo where the webhook will be created"
  - name: GitHubDomain
    description: "The GitHub domain. Override for GitHub Enterprise"
    default: "github.com"
  - name: WebhookEvents
    description: "List of events the webhook will send notifications for"
    default: '[\"push\"]'
  steps:
  - name: create-webhook
    volumeMounts:
    - name: github-info
      mountPath: /var/secret
    image: ricsanfre/docker-curl-jq:latest
    command:
    - sh
    args:
    - -ce
    - |
      set -e
      # Github variables for identifying the repo
      githubOrganization=$(cat /var/secret/githubOrganization)
      githubRepository=$(params.GitHubRepo)
      githubToken=$(cat /var/secret/githubWebhookToken)
      githubUsername=$(curl -s -H "Authorization: Bearer $githubToken" https://api.github.com/user | jq -r '.login')
      if [ $(params.GitHubDomain) = "github.com" ];then
        echo "Running command: curl -v -d "{\"name\": \"web\",\"active\": true,\"events\": $(params.WebhookEvents),\"config\": {\"url\": \"https://$(params.ExternalDomain)\",\"content_type\": \"json\",\"secret\": \"{{ .Release.Name }}\"}}" -u $githubUsername:$githubToken -L https://api.github.com/repos/$githubOrganization/$githubRepository/hooks"
        curl -v -d "{\"name\": \"web\",\"active\": true,\"events\": $(params.WebhookEvents),\"config\": {\"url\": \"https://$(params.ExternalDomain)\",\"content_type\": \"json\",\"secret\": \"{{ .Release.Name }}\"}}" -u $githubUsername:$githubToken -L https://api.github.com/repos/$githubOrganization/$githubRepository/hooks
      else
        cho "Creating webhook for https://$(params.GitHubDomain)/api/v3/repos/$githubOrganization/$githubRepository/hooks"
        curl -v -d "{\"name\": \"web\",\"active\": true,\"events\": $(params.WebhookEvents),\"config\": {\"url\": \"https://$(params.ExternalDomain)/\",\"content_type\": \"json\",\"secret\": \"{{ .Release.Name }}\"}}" -u $githubUsername:$githubToken -L https://$(params.GitHubDomain)/api/v3/repos/$githubOrganization/$githubRepository/hooks
      fi
  - name: send-slack
    volumeMounts:
    - name: github-info
      mountPath: /var/secret
    image: ricsanfre/docker-curl-jq:latest #tag: 7.70.0
    command:
    - sh
    args:
    - -ce
    - |
      githubRepository=$(params.GitHubRepo)
      MESSAGE="Webhook for ${githubRepository} set up!"
      BOTNAME='Stackio Bot'
      SLACK_WEBHOOK_URL=$(cat /var/secret/slackWebhookURL)
      JSON="{\"text\": \"${MESSAGE}\", \"username\": \"${BOTNAME}\", \"icon_emoji\": \":robot_face:\"}"
      curl -X POST -H 'Content-Type: application/json' --data "${JSON}" "${SLACK_WEBHOOK_URL}"
---
apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  name: create-webhook-{{ $.Release.Name }}-cicd
  labels:
    {{- range $key, $value := .Values.labels }}
    {{ $key }}: {{ $value | quote }} 
    {{- end }}
    {{- include "cicd-bind.labels" . | nindent 4 }}
spec:
  taskRef:
    name: create-webhook-{{ .Release.Name }}-cicd
  params:
  - name: GitHubRepo
    value: {{ .Values.GithubRepository }}
  - name: GitHubInfoSecretName
    value: {{ .Release.Name }}-push-info-cicd
  - name: ExternalDomain
    value: {{ .Release.Name }}.platform.beta.sidepro.app
  timeout: 1000s
  serviceAccountName: {{ .Release.Name }}-createwebhook-cicd